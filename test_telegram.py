#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram API.
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç, –µ—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
"""

import requests
import sys
import json
import argparse
import time


def test_bot_token(token):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–∞ Telegram –±–æ—Ç–∞"""
    print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞...")
    url = f"https://api.telegram.org/bot{token}/getMe"

    try:
        response = requests.get(url, timeout=10)
        data = response.json()

        if data.get("ok"):
            bot_name = data["result"]["first_name"]
            bot_username = data["result"]["username"]
            print(f"‚úÖ –¢–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω. –ë–æ—Ç: {bot_name} (@{bot_username})")
            return True
        else:
            error = data.get("description", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞")
            print(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω: {error}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–æ–∫–µ–Ω–∞: {e}")
        return False


def test_send_message(token, chat_id):
    """–ü—ã—Ç–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    print(f"–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç {chat_id}...")
    url = f"https://api.telegram.org/bot{token}/sendMessage"

    message = f"ü§ñ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç.\n–í—Ä–µ–º—è: {time.strftime('%Y-%m-%d %H:%M:%S')}"

    try:
        response = requests.post(
            url,
            json={"chat_id": chat_id, "text": message},
            timeout=10
        )
        data = response.json()

        if data.get("ok"):
            print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
            return True
        else:
            error = data.get("description", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞")
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {error}")
            print("–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—à–∏–±–∫–µ:")
            print(json.dumps(data, indent=2, ensure_ascii=False))
            return False
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return False


def get_updates(token):
    """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –±–æ—Ç–∞"""
    print("–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –¥–ª—è –±–æ—Ç–∞...")
    url = f"https://api.telegram.org/bot{token}/getUpdates"

    try:
        response = requests.get(url, timeout=10)
        data = response.json()

        if data.get("ok"):
            updates = data.get("result", [])
            if not updates:
                print("–û–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –í–æ–∑–º–æ–∂–Ω–æ, –±–æ—Ç –Ω–µ –ø–æ–ª—É—á–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–π –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —É—Å—Ç–∞—Ä–µ–ª–∏.")
                print("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞ —Å —Ñ–ª–∞–≥–æ–º --updates.")
                return None

            print(f"–ù–∞–π–¥–µ–Ω–æ {len(updates)} –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π.")

            for update in updates:
                if "message" in update:
                    message = update["message"]
                    chat_id = message["chat"]["id"]
                    chat_type = message["chat"]["type"]
                    if "username" in message["chat"]:
                        chat_name = f"@{message['chat']['username']}"
                    elif "title" in message["chat"]:
                        chat_name = message["chat"]["title"]
                    else:
                        chat_name = f"{message['chat'].get('first_name', '')} {message['chat'].get('last_name', '')}".strip()

                    print(f"Chat ID: {chat_id} ({chat_type}: {chat_name})")

            return updates
        else:
            error = data.get("description", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞")
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {error}")
            return None
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {e}")
        return None


def main():
    parser = argparse.ArgumentParser(description="–¢–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Telegram API")
    parser.add_argument("--token", help="–¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞")
    parser.add_argument("--chat_id", help="ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
    parser.add_argument("--updates", action="store_true", help="–ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –±–æ—Ç–∞")
    parser.add_argument("--from_config", action="store_true", help="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–∫–µ–Ω –∏ chat_id –∏–∑ config.py")
    args = parser.parse_args()

    token = None
    chat_id = None

    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏ chat_id –∏–∑ config.py, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–æ
    if args.from_config:
        try:
            sys.path.append('.')
            from config import CONFIG
            token = CONFIG.get("telegram_bot_token")
            chat_id = CONFIG.get("telegram_chat_id")
            print(f"–ó–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ config.py")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ config.py: {e}")

    # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∏–º–µ—é—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    if args.token:
        token = args.token

    if args.chat_id:
        chat_id = args.chat_id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–∫–µ–Ω —É–∫–∞–∑–∞–Ω
    if not token:
        print("–û—à–∏–±–∫–∞: –Ω–µ —É–∫–∞–∑–∞–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --token –∏–ª–∏ --from_config.")
        return 1

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
    if not test_bot_token(token):
        return 1

    # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–æ
    if args.updates:
        updates = get_updates(token)
        if not updates:
            return 1

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω chat_id
    if chat_id:
        if not test_send_message(token, chat_id):
            return 1
    else:
        print("–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —É–∫–∞–∂–∏—Ç–µ chat_id —Å –ø–æ–º–æ—â—å—é --chat_id –∏–ª–∏ --from_config.")

    print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    return 0


if __name__ == "__main__":
    sys.exit(main())